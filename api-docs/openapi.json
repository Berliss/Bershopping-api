{
  "openapi": "3.0.1",
  "info": {
    "title": "BerShopping Api",
    "description": "A private api to manage the checkout processes of customers logged",
    "contact": {
      "name": "Berlis Rodriguez",
      "url": "http://bersoft.com",
      "email": "berlisy2j@hotmail.com"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/bershopping/checkout/products/{id}": {
      "put": {
        "tags": [
          "checkout-rest-controller"
        ],
        "summary": "Add new product or update product quantity if is already inside checkout",
        "operationId": "addItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductToAddDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Modify product quantity then return the products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Add a new product to checkout then return the products, if not any checkout process active then create one",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "1 - Product stock is not enough for the given quantity<br>2 - Id on url and id on request body are different",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "1 - A customer mapped to the current logged user email not found<br>2 - An active checkout process is not found<br>3 - Not product found with the given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "checkout-rest-controller"
        ],
        "summary": "Remove a product from checkout if it has not more products left then delete the checkout",
        "operationId": "removeItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove a product inside of checkout then return the products left",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemDto"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Remove the last product left then delete the checkout"
          },
          "404": {
            "description": "1 - A customer mapped to the current logged user email not found<br>2 - An active checkout process is not found<br>3 - The given product is not found inside the checkout<br>4 - Not product found with the given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/checkout/payments/{id}": {
      "put": {
        "tags": [
          "checkout-rest-controller"
        ],
        "summary": "Set one of the current customer payment methods to the checkout payments method",
        "operationId": "setPaymentMethod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set a payment method to the checkout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          },
          "404": {
            "description": "1 - A customer mapped to the current logged user email not found<br>2 - An active checkout process is not found<br>3 - The given payment method is not found on customer payment method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/checkout/addresses/{id}": {
      "put": {
        "tags": [
          "checkout-rest-controller"
        ],
        "summary": "Set one of the current customer addresses to the checkout delivery",
        "operationId": "setAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set a delivery address to the checkout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Address"
                  }
                }
              }
            }
          },
          "404": {
            "description": "1 - A customer mapped to the current logged user email not found<br>2 - An active checkout process is not found<br>3 - The given address is not found on customer addresses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/orders": {
      "post": {
        "tags": [
          "order-rest-controller"
        ],
        "summary": "Create a order for the current customer",
        "operationId": "createOrder",
        "responses": {
          "201": {
            "description": "An order is created for the current customer logged",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDto"
                }
              }
            }
          },
          "400": {
            "description": "1 - A customer is not set to checkout<br>2 - The delivery is not set to checkout<br>3 - The payment method is not set to checkout or not enough balance<br>4 - Not any products added in checkout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "1 - A customer mapped to the current logged user email not found<br>2 - A checkout process is not initialized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/products": {
      "get": {
        "tags": [
          "product-rest-controller"
        ],
        "summary": "Get all products of bershopping",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "Get list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/customers": {
      "get": {
        "tags": [
          "customer-rest-controller"
        ],
        "summary": "Get current customer info",
        "operationId": "getCustomerInfo",
        "responses": {
          "200": {
            "description": "Get customer info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "A customer mapped to the current logged user email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/customers/orders": {
      "get": {
        "tags": [
          "customer-rest-controller"
        ],
        "summary": "Get all orders relatives of the current customer",
        "operationId": "getCustomerOrders",
        "responses": {
          "200": {
            "description": "Get list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "A customer mapped to the current logged user email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bershopping/checkout": {
      "get": {
        "tags": [
          "checkout-rest-controller"
        ],
        "summary": "Get current customer checkout",
        "operationId": "getCheckout",
        "responses": {
          "200": {
            "description": "Get current customer checkout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasketDto"
                }
              }
            }
          },
          "404": {
            "description": "1 - A customer mapped to the current logged user email not found<br>2 - An active checkout process is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductToAddDto": {
        "required": [
          "id",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "example": 5
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "errortitle"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "errordetails"
            }
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 400
          }
        }
      },
      "ItemDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "productDesc": {
            "type": "string",
            "example": "sampleproduct"
          },
          "productStock": {
            "type": "number",
            "format": "double",
            "example": 10
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 200
          },
          "qty": {
            "type": "number",
            "format": "double",
            "example": 5
          },
          "total": {
            "type": "number",
            "format": "double",
            "example": 1000
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "paymentType": {
            "type": "string",
            "example": "creditcard"
          },
          "numberReference": {
            "type": "string",
            "example": 1234
          },
          "balance": {
            "type": "number",
            "format": "double",
            "example": 9999
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "dominicanrepublic"
          }
        }
      },
      "OrderDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "createAt": {
            "type": "string",
            "example": "2020/01/01"
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "example": 1000
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethodDto"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "customer": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          }
        }
      },
      "PaymentMethodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "paymentType": {
            "type": "string",
            "example": "creditcard"
          },
          "referenceNumber": {
            "type": "string",
            "example": 1234
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "price": {
            "type": "number",
            "format": "double",
            "example": 200
          },
          "description": {
            "type": "string",
            "example": "shoes"
          },
          "stock": {
            "type": "number",
            "format": "double",
            "example": 10
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "berlis"
          },
          "lastName": {
            "type": "string",
            "example": "rodriguez"
          },
          "email": {
            "type": "string",
            "example": "berlisy2j@hotmail.com"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod"
            }
          }
        }
      },
      "BasketDto": {
        "type": "object",
        "properties": {
          "checkoutId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "createAt": {
            "type": "string",
            "example": "2020/01/01"
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "example": 1000
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "customer": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          }
        }
      }
    }
  }
}